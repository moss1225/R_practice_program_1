1、数学函数
 exp():以自然常熟e为底指数函数
 log():自然对数
 log10():以10为底的常用对数
 sqrt():平方根
 abs():绝对值
 sin(),cos()等：三角函数
 min(),max():向量最小值、最大值
 which.min(),which.max():向量最小、最大元素的位置索引
 pmin(),pmax():把多个等长度的向量按元素逐个对比，返回所有向量的第k个元素中最小（最大）的值。
 sum(),prod():把一个向量的所有元素求和(求积)
 cumsum(),cumprod():把一个向量的前k个元素累计求和（求积）
 round(),floor(),ceiling():四舍五入取整、向下取整、向上取整
 factorial():阶乘

 2、扩展案例：计算概率
 
 3、累积和与累积成绩
 x <- c(12 , 5 , 13)
 cumsum(x)
 12 17 30
 cumprod(x)
 12 60 780
 
 4、最大值和最小值
 (1)min()和pmin()，求最小值
 	        min()与pmin()意义完全不一样，min()把所有元素都组成一个向量，然后返回最小值。
	pmin()却是用对比两个向量的，把两个向量对应位置的元素分别两两比较(pair-wise)，返回
 	一个长度相等的新向量，所以这个函数名字前面有一个字母p。实际上，pmin()也可以接受多
	个向量的输入。
 z=matrix(c(1,5,6,2,3,2),byrow=F,ncol=2)
 min(z[,1],z[,2])      # 返回 1
 pmin(z[,1],z[,2])    # 返回 1 3 2
  (2)同理：max()和pmax()求最大值
  (3)求函数最大值
  		以上函数都是求向量的最值，如果要求函数的最小、最大值需要nlm()和optim()。例
如，求f(x)=x^2 - sin(x)的最小值，如下所示：
nlm(function(x)return(x^2 - sin(x)) , 8)
结果：
	$minimum
		[1] -0.2324656 
	$estimate
		[1] 0.4501831
	$gradient
		[1] 4.024558e-09
	$code
		[1] 1
	$iterations
		[1]5 
说明：
       最后我们得到最小值的近似值是 -0.23，在x=0.45时取到。这里用到了数值分析里一种
近似求根方法-Newton-Raphson方法，共迭代5次得到最终结果。函数的第二个参数是用
来设定初始值的，我们设为8。（这里第二个参数是随意设定的，有些时候需要实验才能找
到使迭代收敛的初始值）

5、微积分
R也可以进行微积分运算，包括符号微分和数值积分，见下例：
D(expression(exp(x^2),"x")) # derivative导数
	输出：exp(x^2)*（2*x）
integrate(function(x) x^2 , 0 , 1) # integrate 积分
	输出：0.33333333
	另外，R的odesolve包可以用于处理微分方程：ryacas包提供了R与Yacas符号数学系统接
	口(ryacas)。这些包都可以在CRAN上下载，详见附录B。

6、统计分布部分
大部分的统计分布函数在R里都有实现。这些函数名都有一套前缀：
* d：对应概率密度函数或概率质量函数
* p：对应累积分布函数
* q：对应分布的分位数
* r：对应随机数生成函数
前缀后的部分十分部函数的名字
       分布               概率密度函数              累积分布函数               分位数               随机数
    正态分布               dnorm()                              pnorm()                          qnorm()                  rnorm()
    卡方分布               dchisq()                              pchisq()                          qchisq()                  rchisq()
    二项分布               dbinom()                            dbinom()                         dbinom()                dbinom()
    
 7、排列sort()
 x <- c(13,5,12,5)
 sort(x) 输出 5,5,12,13
 order(x)输出2 4 3 1，返回索引
 rank(x)输出4.0 1.5 3.0 1.5 返回数据的排名
 
 8、向量和矩阵的线性代数运算
(1) 向量内积 a %*% b
(2)解线性方向组 
a <- matrix(c(1,1,-1,1),nrow=2,ncol=2,byrow=T)
b <- c(2,4)
slove(a,b)
3 1 解释：x1=3 , x2=1
单纯slove(a) ，返回逆矩阵

9、下面是一些其他线性代数运算函数：
t()矩阵的转置
qr()QR分解
chol()Cholesky分解
det()矩阵行列式的值
eigen()矩阵的特征值和特征向量
diag()从方阵中提出对角矩阵（有利于从协方差矩阵中得到方差和构建对角矩阵）。
sweep()数值分析的批量运算符
m=matrix(c(1,2,3,4,5,6) , nrow=3 , byrow=T)
sweep(m,1,c(1,4,7),"+")
# 将m按列添加1,4,7

10、集合运算
union(x , y)			 # 并集
intersect(x , y)       # 交集
setdiff(x , y)           # 差集 元素属于x，不属于y
setequal(x , y)        # 检测是否相等
c %in% y              # 检验成员c是否为集合y的元素
choose(x , y)          # 从含有n个元素的集合中选取含有k个元素的子集的数目。

11、检验u是否是v的子集
"%subsetof%" <- function(u ,v){
	return(setequal(intersect(u,v),v))
}

12、函数combn()用于产生集合元素的组合，例如找到集合{1,2,3}中含有两个元素的子集{1,2}、{2,3}、{1,3}
操作：combn(1:3 , 2)

13、用R做模拟
x <- rbinom(100000 , 5 , 0.5)
mean(x >= 4)
从一个二项分布中（试验次数为5次，成功概率0.5）生成100,000个随机变量。
rnorm()正态分布
rexp()指数分布
runif()均匀分布
rgamma()伽马分布
rpois()泊松分布

14、重复运行时使用相同的随机束流
set.seed(8888)