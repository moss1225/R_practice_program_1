1、数学函数
 exp():以自然常熟e为底指数函数
 log():自然对数
 log10():以10为底的常用对数
 sqrt():平方根
 abs():绝对值
 sin(),cos()等：三角函数
 min(),max():向量最小值、最大值
 which.min(),which.max():向量最小、最大元素的位置索引
 pmin(),pmax():把多个等长度的向量按元素逐个对比，返回所有向量的第k个元素中最小（最大）的值。
 sum(),prod():把一个向量的所有元素求和(求积)
 cumsum(),cumprod():把一个向量的前k个元素累计求和（求积）
 round(),floor(),ceiling():四舍五入取整、向下取整、向上取整
 factorial():阶乘

 2、扩展案例：计算概率
 
 3、累积和与累积成绩
 x <- c(12 , 5 , 13)
 cumsum(x)
 12 17 30
 cumprod(x)
 12 60 780
 
 4、最大值和最小值
 (1)min()和pmin()，求最小值
 	        min()与pmin()意义完全不一样，min()把所有元素都组成一个向量，然后返回最小值。
	pmin()却是用对比两个向量的，把两个向量对应位置的元素分别两两比较(pair-wise)，返回
 	一个长度相等的新向量，所以这个函数名字前面有一个字母p。实际上，pmin()也可以接受多
	个向量的输入。
 z=matrix(c(1,5,6,2,3,2),byrow=F,ncol=2)
 min(z[,1],z[,2])      # 返回 1
 pmin(z[,1],z[,2])    # 返回 1 3 2
  (2)同理：max()和pmax()求最大值
  (3)求函数最大值
  		以上函数都是求向量的最值，如果要求函数的最小、最大值需要nlm()和optim()。例
如，求f(x)=x^2 - sin(x)的最小值，如下所示：
nlm(function(x)return(x^2 - sin(x)) , 8)
结果：
	$minimum
		[1] -0.2324656 
	$estimate
		[1] 0.4501831
	$gradient
		[1] 4.024558e-09
	$code
		[1] 1
	$iterations
		[1]5 
说明：
       最后我们得到最小值的近似值是 -0.23，在x=0.45时取到。这里用到了数值分析里一种
近似求根方法-Newton-Raphson方法，共迭代5次得到最终结果。函数的第二个参数是用
来设定初始值的，我们设为8。（这里第二个参数是随意设定的，有些时候需要实验才能找
到使迭代收敛的初始值）

5、微积分
R也可以进行微积分运算，包括符号微分和数值积分，见下例：
D(expression(exp(x^2),"x")) # derivative导数
	输出：exp(x^2)*（2*x）
integrate(function(x) x^2 , 0 , 1) # integrate 积分
	输出：0.33333333
	另外，R的odesolve包可以用于处理微分方程：ryacas包提供了R与Yacas符号数学系统接
	口(ryacas)。这些包都可以在CRAN上下载，详见附录B。